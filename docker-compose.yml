services:
  sb-database:
    image: postgres:alpine
    environment:
      SB_ENV: '${SB_ENV}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    container_name: sb-database
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./log/postgresql:/var/log/postgresql

  sb-cache:
    image: redis:7-alpine
    environment:
      SB_ENV: '${SB_ENV}'
    container_name: sb-cache

  sb-backend:
    image: ${DOCKER_CONTAINER_REGISTRY}litui/shrampybot-backend
    environment:
      SB_ENV: '${SB_ENV}'
      BASE_URL: '${BASE_URL}'
    build:
      context: backend
    container_name: sb-backend
    command: 
      - bash
      - -c
      - |
        sleep 5
        ./manage.py migrate --no-input
        ./manage.py collectstatic --no-input
        ./manage.py runserver 0.0.0.0:8180
    volumes:
      - ./etc:/etc/gsg:ro
      - ./log:/var/log/gsg:rw
      - ./backend/code:/gsg/backend/code:ro
    depends_on:
      - sb-database
      - sb-cache

  # In development the frontend will run continuously (vite server)
  # whereas in production it'll just generate static files for nginx to host and exit
  sb-frontend:
    image: ${DOCKER_CONTAINER_REGISTRY}litui/shrampybot-frontend
    environment:
      SB_ENV: '${SB_ENV}'
      FRONTEND_HOSTNAME: '${NGINX_HOSTNAME}'
      FRONTEND_PORT: '${NGINX_PORT}'
    build:
      context: frontend
    container_name: sb-frontend
    command: 
      - /bin/bash
      - -c
      - |
        if [[ $${SB_ENV} == 'development' ]]; then
          envsubst '$$FRONTEND_HOSTNAME,$$FRONTEND_PORT' < /gsg/frontend/.env.template > /gsg/frontend/.env
          npm run dev -- --host 0.0.0.0 --port ${NGINX_PORT}
        else
          npm run build
        fi
    volumes:
      - ./frontend/src:/gsg/frontend/src:ro
      - ./frontend/dist:/gsg/frontend/dist:rw

  sb-webserver:
    image: ${DOCKER_CONTAINER_REGISTRY}litui/shrampybot-webserver
    build:
      context: webserver
    environment:
      SB_ENV: '${SB_ENV}'
      NGINX_PORT: '${NGINX_PORT}'
      NGINX_HOSTNAME: '${NGINX_HOSTNAME}'
      NGINX_SSL_CERTFILE: '${NGINX_SSL_CERTFILE}'
      NGINX_SSL_KEYFILE: '${NGINX_SSL_KEYFILE}'
      NGINX_SSL_PATH: '${NGINX_SSL_PATH}'
    container_name: sb-webserver
    command:
      - bash
      - -c
      - |
        sleep 5
        envsubst '$$SB_ENV,$$NGINX_HOSTNAME,$$NGINX_PORT,$$NGINX_SSL_CERTFILE,$$NGINX_SSL_KEYFILE' < /tmp/nginx.conf.template > /etc/nginx/conf.d/default.conf
        nginx -g 'daemon off;'
    volumes:
      - ./log/nginx:/var/log/nginx
      - '${NGINX_SSL_PATH}:/etc/nginx/ssl'
      - ./frontend/dist:/var/www/html
    links:
      - sb-frontend:sb-frontend
    depends_on:
      - sb-backend
      - sb-frontend
    ports:
      - "${NGINX_PORT}:443"
